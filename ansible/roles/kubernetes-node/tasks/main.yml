---
- name: Ensure target directories exist
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /opt/cni/bin
    - /etc/kubernetes/
    - /var/log/journal

- name: Wait for K8S API service to be accessible
  wait_for:
    host: "{{ cluster_fqdn }}"
    port: "443"
    sleep: 15
    timeout: 1800

- name: Set first master fact
  set_fact:
    first_master: "{{ groups['master'][0] }}"

- set_fact:
    kubeadm_join: "{{ hostvars[groups['master'][0]]['kubeadm_join'] }}"

- name: Parse bootstrap token and ca cert hash 
  set_fact:
    bootstrap_token: "{{ kubeadm_join.split(' ')[4] }}"
    ca_cert_hash: "{{ kubeadm_join.split(' ')[6] }}"
  when: k8s_version.split('.')[1] |int <= 13

- name: Parse bootstrap token and ca cert hash 
  set_fact:
    bootstrap_token: "{{ kubeadm_join.split(' ')[4] }}"
    ca_cert_hash: "{{ kubeadm_join.split(' ')[10] }}"
  when: k8s_version.split('.')[1] |int > 13

- name: Create join config
  template:
    src: etc/kubernetes/kubeadm-join-config.yaml.j2
    dest: /etc/kubernetes/kubeadm-join-config.yaml

- name: Get DNS from metadata service
  uri:
    url: http://169.254.169.254/latest/meta-data/local-hostname
    return_content: yes
  register: command_output

- set_fact:
    local_dns: "{{ command_output.content }}"

- name: Run kubeadm join
  command: kubeadm join --node-name={{ local_dns }} --config=/etc/kubernetes/kubeadm-join-config.yaml
  args:
    creates: /etc/cni/net.d/calico-kubeconfig
