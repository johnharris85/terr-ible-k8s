---
# - name: configure kubelet
#   copy:
#     src: etc/systemd/system/kubelet.service.d/20-etcd-service-manager.conf
#     dest: /etc/systemd/system/kubelet.service.d/20-etcd-service-manager.conf

# - name: enable kubelet service
#   systemd:
#     name: kubelet
#     state: restarted # TODO: Only restart the kubelet if the above configuration changed
#     enabled: True
#     daemon_reload: True

- name: generate kubeadm flags
  command: "/usr/bin/kubeadm init phase kubelet-start --config /etc/kubernetes/kubeadm-etcd.yaml"

- name: generate etcd ca certificate
  command: /usr/bin/kubeadm init phase certs etcd-ca
  run_once: True
  delegate_to: "{{ groups['etcd'][0] }}"
  
- name: slurp the etcd ca certificate and key
  slurp:
    src: "/etc/kubernetes/pki/etcd/{{ item }}"
  run_once: True
  delegate_to: "{{ groups['etcd'][0] }}"
  register: etcd_ca_pki
  with_items:
  - ca.crt
  - ca.key

- name: ensure etcd pki directory exists
  file:
    dest: /etc/kubernetes/pki/etcd
    state: directory
    owner: root
    group: root

- name: distribute etcd ca certificate and key
  no_log: True
  copy:
    dest: "{{ item.source }}"
    content: "{{ item.content | b64decode }}"
    owner: root
    group: root
    mode: 0700
  with_items: "{{ etcd_ca_pki.results }}"
  when: inventory_hostname != groups['etcd'][0]
  
- name: drop kubeadm configuration file
  template:
    src: etc/kubernetes/kubeadm-etcd.yaml.j2
    dest: /etc/kubernetes/kubeadm-etcd.yaml

- name: generate etcd certificates
  command: "/usr/bin/kubeadm init phase certs {{ item }} --config /etc/kubernetes/kubeadm-etcd.yaml"
  with_items:
  - etcd-server
  - etcd-peer
  - etcd-healthcheck-client
  - apiserver-etcd-client

- include_role:
    name: kubeadm-etcd

# docker run --rm -it --net host -v /etc/kubernetes:/etc/kubernetes k8s.gcr.io/etcd:3.3.10 etcdctl --cert-file /etc/kubernetes/pki/etcd/peer.crt --key-file /etc/kubernetes/pki/etcd/peer.key --ca-file /etc/kubernetes/pki/etcd/ca.crt --endpoints https://$(curl http://169.254.169.254/latest/meta-data/local-ipv4):2379 cluster-health